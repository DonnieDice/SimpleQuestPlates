name: Package and Release
# This comment forces GitHub to re-evaluate the workflow file. (v1.3.2)

on:
  push:
    tags:
      - 'v*'  # Triggers only on version tags like v1.0.0, v1.0.0-alpha, etc.
  workflow_dispatch: # Allows manual triggering from GitHub UI

env:
  CF_API_KEY: ${{ secrets.CF_API_KEY }}
  WOWI_API_TOKEN: ${{ secrets.WOWI_API_TOKEN }}
  WAGO_API_TOKEN: ${{ secrets.WAGO_API_TOKEN }}
  GITHUB_OAUTH: ${{ secrets.GITHUB_TOKEN }}

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Clone Project
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git user
        run: |
          echo "DEBUG: Starting 'Configure Git user' step"
          git config --global user.name "donniedice"
          git config --global user.email "donniedice@protonmail.com"
          echo "DEBUG: Finished 'Configure Git user' step"

      - name: Set Release Type
        id: set_release_type
        run: |
          echo "DEBUG: Starting 'Set Release Type' step"
          TAG_NAME=${{ github.ref }}
          if [[ "$TAG_NAME" == *"beta"* ]]; then
            echo "release_type=beta" >> $GITHUB_OUTPUT
          elif [[ "$TAG_NAME" == *"alpha" ]]; then
            echo "release_type=alpha" >> $GITHUB_OUTPUT
          else
            echo "release_type=release" >> $GITHUB_OUTPUT
          fi
          echo "DEBUG: Finished 'Set Release Type' step. Release type: ${{ steps.set_release_type.outputs.release_type }}"

      - name: Extract Version from TOC
        id: extract_version
        run: |
          echo "DEBUG: Starting 'Extract Version from TOC' step"
          version=$(grep -oP '^## Version: \K(.*)' ./SimpleQuestPlates.toc | head -1)
          echo "version=$version" >> $GITHUB_OUTPUT
          echo "DEBUG: Finished 'Extract Version from TOC' step. Version: $version"

      - name: Package and Release
        uses: BigWigsMods/packager@master
        with:
          release-type: ${{ steps.set_release_type.outputs.release_type }}
        run: echo "DEBUG: Starting 'Package and Release' step"

      - name: Generate Changelog from Commits
        id: extract_changelog
        run: |
          echo "DEBUG: Starting 'Generate Changelog from Commits' step"
          # Get the previous tag, falling back to the first commit if no previous tag is found
          PREVIOUS_TAG=$(git describe --abbrev=0 --tags `git rev-list --tags --skip=1  --max-count=1` 2>/dev/null || git rev-list --max-parents=0 HEAD)
          echo "DEBUG: Previous tag: $PREVIOUS_TAG"
          
          # Generate a raw changelog from commits between the previous tag and the current one (HEAD)
          CHANGELOG=$(git log --pretty=format:"‚Ä¢ %s (%h)" $PREVIOUS_TAG..HEAD)
          echo "DEBUG: Raw changelog generated (first 50 chars): ${CHANGELOG:0:50}"
          
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          echo "DEBUG: Finished 'Generate Changelog from Commits' step"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: RGX | Simple Quest Plates! v${{ steps.extract_version.outputs.version }}
          body: |
            ${{ steps.extract_changelog.outputs.changelog }}
            
            ---
            
            ## Download Links
            - [CurseForge](https://www.curseforge.com/wow/addons/simple-quest-plates)
            - [Wago.io](https://addons.wago.io/addons/simple-quest-plates)
            - [WoWInterface](https://www.wowinterface.com/downloads/info26957)
            
            ## Support
            - [Discord](https://discord.gg/N7kdKAHVVF)
            - [GitHub Issues](https://github.com/DonnieDice/SimpleQuestPlates/issues)
          draft: false
          prerelease: ${{ steps.set_release_type.outputs.release_type != 'release' }}
          files: |
            .release/*.zip
        run: echo "DEBUG: Starting 'Create GitHub Release' step"

      - name: Send Discord Notification
        if: always()
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
          CHANGELOG_CONTENT: ${{ steps.extract_changelog.outputs.changelog }}
        run: |
          echo "DEBUG: Starting 'Send Discord Notification' step"
          VERSION="${{ steps.extract_version.outputs.version }}"

          # Truncate changelog if too long
          if [ ${#CHANGELOG_CONTENT} -gt 1500 ]; then
            CHANGELOG_CONTENT="${CHANGELOG_CONTENT:0:1500}..."
          fi
          
          # Provide default if empty
          if [ -z "$CHANGELOG_CONTENT" ]; then
            CHANGELOG_CONTENT="Check the release notes on GitHub for details about this update!"
          fi

          # Escape for JSON payload
          JSON_ESCAPED_CHANGELOG=$(echo "$CHANGELOG_CONTENT" | sed -e 's/"/\"/g' -e 's/\t/\t/g' -e 's/\n/\n/g' -e 's/\r/\r/g')

          # DEBUG: Print webhook URL (TEMPORARY - DELETE AFTER DEBUGGING)
          echo "DEBUG: DISCORD_WEBHOOK value (UNMASKED): ${{ secrets.DISCORD_WEBHOOK }}"

          # Send Discord webhook
          curl -H "Content-Type: application/json" \
               -X POST \
               -d "{
                 \"content\": \"\",
                 \"username\": \"RGX Updates\",
                 \"avatar_url\": \"https://raw.githubusercontent.com/donniedice/SimpleQuestPlates/main/images/logo.png\",
                 \"embeds\": [{
                   \"title\": \"üéØ RGX | Simple Quest Plates! v${VERSION} Released!\",
                   \"description\": \"**See quest progress at a glance on enemy nameplates!**\\n\\nA new version of RGX | Simple Quest Plates! has been released!\\n\\n**üìù What's New:**\\n${JSON_ESCAPED_CHANGELOG}\",
                   \"url\": \"https://github.com/DonnieDice/SimpleQuestPlates/releases/tag/v${VERSION}\",
                   \"color\": 5820057,
                   \"thumbnail\": {
                     \"url\": \"https://raw.githubusercontent.com/donniedice/SimpleQuestPlates/main/images/logo.png\"
                   },
                   \"fields\": [
                     {
                       \"name\": \"üì• Downloads\",
                       \"value\": \"[CurseForge](https://www.curseforge.com/wow/addons/simple-quest-plates)\\n[Wago.io](https://addons.wago.io/addons/simple-quest-plates)\\n[WoWInterface](https://www.wowinterface.com/downloads/info26957)\\n[GitHub](https://github.com/DonnieDice/SimpleQuestPlates)\",
                       \"inline\": true
                     },
                     {
                       \"name\": \"üéÆ Compatibility\",
                       \"value\": \"‚úÖ The War Within\\n‚úÖ Classic Era\\n‚úÖ Cataclysm\\n‚úÖ MoP Classic\",
                       \"inline\": true
                     },
                     {
                       \"name\": \"üí¨ Support\",
                       \"value\": \"[Join Discord](https://discord.gg/N7kdKAHVVF)\\n[Report Issues](https://github.com/DonnieDice/SimpleQuestPlates/issues)\",
                       \"inline\": true
                     }
                   ],
                   \"footer\": {
                     \"text\": \"RGX Mods - RealmGX Community | Made with ‚ù§Ô∏è by DonnieDice\",
                     \"icon_url\": \"https://raw.githubusercontent.com/donniedice/SimpleQuestPlates/main/images/kiwi.gif\"
                   },
                   \"timestamp\": \"$(date -u +%Y-%m-%dT%H:%M:%S.000Z)" 
                 }]
               }" \
               "${{ secrets.DISCORD_WEBHOOK }}"