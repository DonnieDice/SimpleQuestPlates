name: Package and Release

on:
  push:
    tags:
      - 'v*'  # Triggers only on version tags like v1.0.0, v1.0.0-alpha, etc.

env:
  CF_API_KEY: ${{ secrets.CF_API_KEY }}
  WOWI_API_TOKEN: ${{ secrets.WOWI_API_TOKEN }}
  WAGO_API_TOKEN: ${{ secrets.WAGO_API_TOKEN }}
  GITHUB_OAUTH: ${{ secrets.GITHUB_TOKEN }}

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Clone Project
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git user
        run: |
          git config --global user.name "donniedice"
          git config --global user.email "donniedice@protonmail.com"

      - name: Set Release Type
        id: set_release_type
        run: |
          TAG_NAME=${{ github.ref }}
          if [[ "$TAG_NAME" == *"beta"* ]]; then
            echo "release_type=beta" >> $GITHUB_OUTPUT
          elif [[ "$TAG_NAME" == *"alpha"* ]]; then
            echo "release_type=alpha" >> $GITHUB_OUTPUT
          else
            echo "release_type=release" >> $GITHUB_OUTPUT
          fi

      - name: Extract Version from TOC
        id: extract_version
        run: |
          version=$(grep -oP '^## Version: \K(.*)' ./*.toc)
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Package and Release
        uses: BigWigsMods/packager@master
        with:
          release-type: ${{ steps.set_release_type.outputs.release_type }}

      - name: Extract Changelog
        id: extract_changelog
        run: |
          # Extract the current version's changelog from docs/CHANGES.md
          VERSION="${{ steps.extract_version.outputs.version }}"
          
          # Read the changelog and extract the current version's content
          CHANGELOG=$(awk -v version="$VERSION" '
            BEGIN { found = 0; content = "" }
            /^## Version/ {
              if ($3 == version) {
                found = 1
                next
              } else if (found) {
                exit
              }
            }
            found && /^---/ { exit }
            found { content = content $0 "\n" }
            END { print content }
          ' docs/CHANGES.md | head -c 1500)
          
          # Escape for JSON
          CHANGELOG="${CHANGELOG//$'\n'/\\n}"
          CHANGELOG="${CHANGELOG//\"/\\\"}"
          
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: Simple Quest Plates v${{ steps.extract_version.outputs.version }}
          body: |
            # Simple Quest Plates v${{ steps.extract_version.outputs.version }}
            
            ${{ steps.extract_changelog.outputs.changelog }}
            
            ---
            
            ## Download Links
            - [CurseForge](https://www.curseforge.com/wow/addons/simple-quest-plates)
            - [Wago.io](https://addons.wago.io/addons/simple-quest-plates)
            - [WoWInterface](https://www.wowinterface.com/downloads/info26957)
            
            ## Support
            - [Discord](https://discord.gg/N7kdKAHVVF)
            - [GitHub Issues](https://github.com/donniedice/SimpleQuestPlates/issues)
          draft: false
          prerelease: ${{ steps.set_release_type.outputs.release_type != 'release' }}
          files: |
            .release/*.zip

      - name: Send Discord Notification
        if: always()
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        run: |
          # Extract version and prepare changelog for Discord
          VERSION="${{ steps.extract_version.outputs.version }}"
          
          # Get the changelog content for this version from docs/CHANGES.md
          # The format is "## Version X.X.X - YYYY-MM-DD"
          CHANGELOG_RAW=$(awk -v version="$VERSION" '
            BEGIN { found = 0; content = "" }
            /^## Version/ {
              # Extract version number from the line
              split($0, parts, " ")
              if (parts[3] == version) {
                found = 1
                next
              } else if (found) {
                exit
              }
            }
            found && /^---/ { exit }
            found && /^<p align="center">/ { exit }
            found { 
              # Skip empty lines at the beginning
              if (content == "" && $0 == "") next
              # Convert markdown formatting for Discord
              gsub(/^### /, "**", $0)
              gsub(/^- /, "‚Ä¢ ", $0)
              content = content $0 "\\n"
            }
            END { print content }
          ' docs/CHANGES.md)
          
          # Limit to 800 chars, remove trailing newlines, and escape for JSON
          CHANGELOG_PREVIEW=$(echo "$CHANGELOG_RAW" | head -c 800 | sed 's/\\n*$//' | sed 's/"/\\"/g' | sed 's/\\n/\\\\n/g')
          
          # If changelog is empty, provide a default message
          if [ -z "$CHANGELOG_PREVIEW" ]; then
            CHANGELOG_PREVIEW="‚Ä¢ Fixed GitHub Actions workflow\\n‚Ä¢ Improved Discord notifications\\n‚Ä¢ Enhanced changelog extraction"
          fi
          
          # Create Discord webhook payload
          curl -H "Content-Type: application/json" \
               -X POST \
               -d "{
                 \"username\": \"SQP Updates\",
                 \"avatar_url\": \"https://raw.githubusercontent.com/donniedice/SimpleQuestPlates/main/images/logo.png\",
                 \"embeds\": [{
                   \"title\": \"üéØ Simple Quest Plates v${VERSION} Released!\",
                   \"description\": \"**See quest progress at a glance on enemy nameplates!**\\n\\nA new version of Simple Quest Plates has been released!\",
                   \"url\": \"https://github.com/donniedice/SimpleQuestPlates/releases/tag/v${VERSION}\",
                   \"color\": 5820057,
                   \"thumbnail\": {
                     \"url\": \"https://raw.githubusercontent.com/donniedice/SimpleQuestPlates/main/images/logo.png\"
                   },
                   \"fields\": [
                     {
                       \"name\": \"üìù What's New in v${VERSION}\",
                       \"value\": \"${CHANGELOG_PREVIEW}\",
                       \"inline\": false
                     },
                     {
                       \"name\": \"üì• Downloads\",
                       \"value\": \"[CurseForge](https://www.curseforge.com/wow/addons/simple-quest-plates)\\n[Wago.io](https://addons.wago.io/addons/simple-quest-plates)\\n[WoWInterface](https://www.wowinterface.com/downloads/info26957)\\n[GitHub](https://github.com/donniedice/SimpleQuestPlates)\",
                       \"inline\": true
                     },
                     {
                       \"name\": \"üéÆ Compatibility\",
                       \"value\": \"‚úÖ The War Within\\n‚úÖ Retail Only\\n‚úÖ All Nameplate Addons\",
                       \"inline\": true
                     },
                     {
                       \"name\": \"üí¨ Support\",
                       \"value\": \"[Join Discord](https://discord.gg/N7kdKAHVVF)\\n[Report Issues](https://github.com/donniedice/SimpleQuestPlates/issues)\",
                       \"inline\": true
                     }
                   ],
                   \"footer\": {
                     \"text\": \"RGX Mods - RealmGX Community | Made with ‚ù§Ô∏è by DonnieDice\",
                     \"icon_url\": \"https://raw.githubusercontent.com/donniedice/SimpleQuestPlates/main/images/kiwi.gif\"
                   },
                   \"timestamp\": \"$(date -u +%Y-%m-%dT%H:%M:%S.000Z)\"
                 }]
               }" \
               "$DISCORD_WEBHOOK"